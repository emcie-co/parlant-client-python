# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .guideline_with_connections_and_tool_associations import (
    GuidelineWithConnectionsAndToolAssociations,
)
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class GuidelineCreationResult(UniversalBaseModel):
    """
    Result wrapped for `Guideline`s creation.
    """

    items: typing.List[GuidelineWithConnectionsAndToolAssociations] = pydantic.Field()
    """
    
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
