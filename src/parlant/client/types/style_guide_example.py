# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .style_guide_event import StyleGuideEvent
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class StyleGuideExample(UniversalBaseModel):
    """
    Represents a style guide example consisting of 'before' and 'after' event sequences,
    along with a 'violation' description explaining the issue in the 'before' version.
    """

    before: typing.List[StyleGuideEvent]
    after: typing.List[StyleGuideEvent]
    violation: str = pydantic.Field()
    """
    Explains why the 'before' version violates or contradicts the style principle.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
