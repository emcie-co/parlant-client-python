# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import datetime as dt
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Customer(UniversalBaseModel):
    """
    Represents a customer in the system.

    Customers are entities that interact with agents through sessions. Each customer
    can have metadata stored in the extra field and can be tagged for categorization.

    Properties:
    id: Unique identifier for the customer
    creation_utc: Timestamp of when the customer was created
    name: Display name of the customer
    extra: Additional metadata as key-value pairs
    tags: List of tag IDs associated with this customer
    """

    id: str
    creation_utc: dt.datetime
    name: str
    extra: typing.Dict[str, str]
    tags: typing.List[str]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
