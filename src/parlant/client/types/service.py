# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
from .tool_service_kind_dto import ToolServiceKindDto
import typing
from .tool import Tool
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Service(UniversalBaseModel):
    """
    Details about a service integration. The tools list is only included when retrieving a specific service.
    """

    name: str = pydantic.Field()
    """
    User assigned name of the service
    """

    kind: ToolServiceKindDto
    url: str = pydantic.Field()
    """
    The URL of the tool service
    """

    tools: typing.Optional[typing.List[Tool]] = pydantic.Field(default=None)
    """
    Optional list of tools associated with this service
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
