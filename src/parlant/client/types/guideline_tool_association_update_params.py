# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .tool_id import ToolId
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class GuidelineToolAssociationUpdateParams(UniversalBaseModel):
    """
    Parameters for adding/removing tool associations.
    """

    add: typing.Optional[typing.List[ToolId]] = pydantic.Field(default=None)
    """
    A collection of Tool identifications to be associated with the `Guideline`
    """

    remove: typing.Optional[typing.List[ToolId]] = pydantic.Field(default=None)
    """
    A collection of Tool identifications to be detached from the `Guideline`
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
