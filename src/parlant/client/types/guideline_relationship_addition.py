# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .guideline_relationship_kind_dto import GuidelineRelationshipKindDto
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class GuidelineRelationshipAddition(UniversalBaseModel):
    """
    Represents a guideline relationship addition.
    """

    source_guideline: typing.Optional[str] = pydantic.Field(default=None)
    """
    `id` of guideline or tag that is source or target of this relationship.
    """

    source_tag: typing.Optional[str] = pydantic.Field(default=None)
    """
    `id` of guideline or tag that is source or target of this relationship.
    """

    target_guideline: typing.Optional[str] = pydantic.Field(default=None)
    """
    `id` of guideline or tag that is source or target of this relationship.
    """

    target_tag: typing.Optional[str] = pydantic.Field(default=None)
    """
    `id` of guideline or tag that is source or target of this relationship.
    """

    kind: GuidelineRelationshipKindDto

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
