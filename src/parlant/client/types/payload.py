# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .payload_kind_dto import PayloadKindDto
import typing
from .guideline_payload import GuidelinePayload
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Payload(UniversalBaseModel):
    kind: PayloadKindDto = "guideline"
    guideline: typing.Optional[GuidelinePayload] = pydantic.Field(default=None)
    """
    Payload data for Guideline operations
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
