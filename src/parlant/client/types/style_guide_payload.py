# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .style_guide_content import StyleGuideContent
from .style_guide_payload_operation_dto import StyleGuidePayloadOperationDto
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class StyleGuidePayload(UniversalBaseModel):
    """
    Payload data for a StyleGuide operation
    """

    content: StyleGuideContent
    operation: StyleGuidePayloadOperationDto
    updated_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Unique identifier for the style guide
    """

    coherence_check: bool = pydantic.Field()
    """
    Whether to check for contradictions with other StyleGuides
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
